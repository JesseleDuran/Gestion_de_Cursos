/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniproyecto1.views;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import miniproyecto1.controllers.Controller;
import miniproyecto1.dbConnections.MySQLdbConnection;
import miniproyecto1.models.Aula;
import miniproyecto1.models.Aula_curso;
import miniproyecto1.models.Curso;
import miniproyecto1.models.Curso_horario;
import miniproyecto1.models.Horario;

/**
 *
 * @author Mota
 */
public class CursoRegisterView extends javax.swing.JFrame {

    /**
     * Creates new form CursoRegisterView
     */
    public CursoRegisterView(MySQLdbConnection db) throws Exception {
        super("Registrar Curso");
        this.db = db;
        initComponents();
        initComboBox();
        restringirTeclas();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tituloField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        topeField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        aceptarButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cancelarButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        aulaComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        estatusComboBox = new javax.swing.JComboBox<>();
        horarioComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tituloField.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        tituloField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tituloFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel1.setText("TÃ­tulo");

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel4.setText("Estatus");

        topeField.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        topeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topeFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jLabel5.setText("Cantidad:");

        aceptarButton.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        aceptarButton.setText("Aceptar");
        aceptarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        jLabel3.setText("Registrar Curso");

        cancelarButton.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        cancelarButton.setText("Cancelar");
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel6.setText("Tope de Estudiantes");

        aulaComboBox.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        aulaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aulaComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel7.setText("Aula");

        estatusComboBox.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        estatusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "No activo" }));
        estatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estatusComboBoxActionPerformed(evt);
            }
        });

        horarioComboBox.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        horarioComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horarioComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel8.setText("Horario");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(aceptarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tituloField, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(topeField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(estatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(aulaComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(horarioComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 147, Short.MAX_VALUE)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tituloField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(topeField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aulaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(horarioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aceptarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tituloFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tituloFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tituloFieldActionPerformed

    private void aceptarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarButtonActionPerformed
        try
        {
            if(validaciones() != true)
            {
                LinkedHashMap<String, Object> map = new LinkedHashMap<String,Object>();
                int estatus;
                if(estatusComboBox.getSelectedItem().toString().equals("Activo"))
                {
                    estatus = 1;
                }
                else
                {
                    estatus = 0;
                }
                
                map.put("titulo", tituloField.getText());
                map.put("tope", Integer.parseInt(topeField.getText()));
                map.put("estatus", estatus);

                Controller<Curso> controller = new Controller<Curso>(Curso.class);
                
                if(controller.insert(map, db) == true)
                {
                    LinkedHashMap<String, Object> mapAula_curso = new LinkedHashMap<String,Object>();
                
                    mapAula_curso.put("id_aula", Integer.parseInt(aulaComboBox.getSelectedItem().toString()));
                    mapAula_curso.put("id_curso", controller.getLast(db));

                    Controller<Aula_curso> controllerAula_curso = new Controller<Aula_curso>(Aula_curso.class);
                    
                    LinkedHashMap<String, Object> mapCurso_horario = new LinkedHashMap<String,Object>();
                
                    Controller<Curso_horario> controllerCurso_horario = new Controller<Curso_horario>(Curso_horario.class);
                    
                    mapCurso_horario.put("id_curso", controller.getLast(db));
                    mapCurso_horario.put("id_horario", (controller.findHorario(horarioComboBox.getSelectedItem().toString(), db)));
                    
                    if(controllerAula_curso.insert(mapAula_curso, db) == true && controllerCurso_horario.insert(mapCurso_horario,db)==true)
                    {
                        dispose();
                        JOptionPane.showMessageDialog(null, "El curso se ha registrado correctamente", "Registro con Ã©xito", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"Error al registrar curso","ERROR",JOptionPane.ERROR_MESSAGE);
                    }
                }
                else
                {
                    
                    JOptionPane.showMessageDialog(null,"Error al registrar curso","ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }    
        }
        catch(Exception e)
        {                  
            Logger.getLogger(LoginView.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null,"Error: "+e.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);         
        }
    }//GEN-LAST:event_aceptarButtonActionPerformed

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
         dispose() ;
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void topeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_topeFieldActionPerformed

    private void aulaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aulaComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aulaComboBoxActionPerformed

    private void estatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estatusComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estatusComboBoxActionPerformed

    private void horarioComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horarioComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horarioComboBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarButton;
    private javax.swing.JComboBox<String> aulaComboBox;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JComboBox<String> estatusComboBox;
    private javax.swing.JComboBox<String> horarioComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField tituloField;
    private javax.swing.JTextField topeField;
    // End of variables declaration//GEN-END:variables
    private KeyListener eventosDeTecla;
    MySQLdbConnection db;
    
    private void restringirTeclas()
    {
        eventosDeTecla = new KeyListener() 
        {
            @Override
            public void keyTyped(KeyEvent ke) 
            {
               char caracter = ke.getKeyChar();
                if(((caracter < '0') || (caracter > '9')) && (caracter != '\b' /*corresponde a BACK_SPACE*/))
                   ke.consume();  
            }

            @Override
            public void keyPressed(KeyEvent ke) {
                
            }

            @Override
            public void keyReleased(KeyEvent ke) {
                
            }
        };
        topeField.addKeyListener(eventosDeTecla); 
    }
    
    public boolean validaciones()
    {
        if(tituloField.getText().isEmpty() == true )
        {
                JOptionPane.showMessageDialog(null,"Error:Debe ingresar un tÃ­tulo","ERROR",JOptionPane.ERROR_MESSAGE);
                return true;
        }
        
        if(topeField.getText().isEmpty() == true )
        {
                JOptionPane.showMessageDialog(null,"Error: Debe ingresar un tope de estudiantes","ERROR",JOptionPane.ERROR_MESSAGE);
                return true;
        }         
        
        return false;
    }
    
    public void initComboBox() throws Exception
    {
        
        Controller<Aula> aula = new Controller<Aula>(Aula.class);
        List<LinkedHashMap<String, Object>> list = aula.getAll(db); //lista de resultados
        ArrayList array = new ArrayList();
        for (Iterator<LinkedHashMap<String, Object>> i = list.iterator(); i.hasNext();) 
        {
            LinkedHashMap<String, Object> item = i.next();
            String valor = (String) item.get("id");
            System.out.println("aula:"+valor);
            aulaComboBox.addItem(valor);
        }
        
        Controller<Horario> horario = new Controller<Horario>(Horario.class);
        List<LinkedHashMap<String, Object>> listHorario = horario.getAll(db); //lista de resultados
        ArrayList arrayHorario = new ArrayList();
        for (Iterator<LinkedHashMap<String, Object>> i = listHorario.iterator(); i.hasNext();) 
        {
            LinkedHashMap<String, Object> itemHorario = i.next();
            String valorInicial = (String) itemHorario.get("hr_inicio");
            String valorFinal = (String) itemHorario.get("hr_final");
            String valorCombo = (String) (valorInicial+" - "+valorFinal);
            System.out.println("combo:"+valorCombo);
            horarioComboBox.addItem(valorCombo);
        }   
    }
    
    
}
